{"version":3,"sources":["Hangman.js","App.js","reportWebVitals.js","index.js"],"names":["lineColor","Hangman","misses","useEffect","canvas","document","getElementById","ctx","getContext","fillStyle","fillRect","width","height","strokeStyle","lineWidth","moveTo","lineTo","stroke","beginPath","arc","Math","PI","id","App","useState","guesses","setGuesses","setMisses","phrase","gameOver","replaceRegex","RegExp","join","hangmanLetters","replace","className","split","map","letter","type","disabled","indexOf","value","onClick","guess","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wPAIMA,EAAY,UAGH,SAASC,EAAT,GAA4B,IAAVC,EAAS,EAATA,OAkE7B,OAhEAC,qBAAU,WACN,IAAMC,EAASC,SAASC,eAAe,kBACjCC,EAAMH,EAAOI,WAAW,MAC9BD,EAAIE,UAAY,UAChBF,EAAIG,SAAS,EAAG,EAAGN,EAAOO,MAAOP,EAAOQ,QACxCL,EAAIM,YAAcb,EAClBO,EAAIO,UAZM,EAaVP,EAAIQ,OAAO,IAAK,KAChBR,EAAIS,OAAO,IAAK,IAChBT,EAAIS,OAAO,IAAK,IAChBT,EAAIS,OAAO,IAAK,KAChBT,EAAIQ,OAAO,IAAK,KAChBR,EAAIS,OAAO,IAAK,KAChBT,EAAIU,SACJV,EAAIQ,OAAO,IAAK,OACjB,IAEHZ,qBAAU,WACN,IACMI,EADSF,SAASC,eAAe,kBACpBE,WAAW,MACf,IAAXN,IACAK,EAAIW,YACJX,EAAIM,YAAcb,EAClBO,EAAIO,UA7BE,EA8BNP,EAAIY,IAAI,IAAK,IAAK,GAAI,EAAG,EAAIC,KAAKC,IAClCd,EAAIU,UAEO,IAAXf,IACAK,EAAIM,YAAcb,EAClBO,EAAIO,UAnCE,EAoCNP,EAAIQ,OAAO,IAAK,KAChBR,EAAIS,OAAO,IAAK,KAChBT,EAAIU,UAEO,IAAXf,IACAK,EAAIM,YAAcb,EAClBO,EAAIO,UA1CE,EA2CNP,EAAIQ,OAAO,IAAK,KAChBR,EAAIS,OAAO,IAAK,KAChBT,EAAIU,UAEO,IAAXf,IACAK,EAAIM,YAAcb,EAClBO,EAAIO,UAjDE,EAkDNP,EAAIQ,OAAO,IAAK,KAChBR,EAAIS,OAAO,IAAK,KAChBT,EAAIU,UAEO,IAAXf,IACAK,EAAIM,YAAcb,EAClBO,EAAIO,UAxDE,EAyDNP,EAAIQ,OAAO,IAAK,KAChBR,EAAIS,OAAO,IAAK,KAChBT,EAAIU,UAEO,IAAXf,IACAK,EAAIM,YAAcb,EAClBO,EAAIO,UA/DE,EAgENP,EAAIQ,OAAO,IAAK,KAChBR,EAAIS,OAAO,IAAK,KAChBT,EAAIU,YAGT,CAACf,IAEA,wBAAQoB,GAAG,iBAAiBX,MAAM,MAAMC,OAAO,MAA/C,+DClCOW,MApCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACJC,EADI,KACKC,EADL,OAEiBF,mBAAS,GAF1B,mBAEJtB,EAFI,KAEIyB,EAFJ,KAGLC,EAAS,0BAOTC,EAAW3B,EAAS,EAEpB4B,EAAe,IAAIC,OAAJ,YAAgBN,EAAQO,KAAK,IAA7B,MAAsC,MACrDC,EAAiBL,EAAOM,QAAQJ,EAAc,KACpD,OACI,sBAAKK,UAAU,MAAf,UACI,cAAC,EAAD,CAASjC,OAAQA,IAEjB,qBAAKiC,UAAW,SAAhB,SACKF,IAEL,qBAAKE,UAAW,WAAhB,SACK,6BAA6BC,MAAM,IAAIC,KAAI,SAAAC,GACxC,OAAO,uBAAOH,UAAW,oBAAqBI,KAAM,SACtCC,SAAUX,GAAYJ,EAAQgB,QAAQH,IAAW,EAAGI,MAAOJ,EAC3DK,QAAS,kBArBzB,SAAAL,IACqB,GAA3BV,EAAOa,QAAQH,IACfX,EAAUzB,EAAS,GAEvBwB,EAAW,GAAD,mBAAKD,GAAL,CAAca,KAiBiBM,CAAMN,WAG1CT,GAAY,gCACT,2CACA,4CAAeD,EAAf,cCtBDiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASC,eAAe,SAM1BuC,M","file":"static/js/main.fe2a8321.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport './Hangman.css'\n\nconst lineWidth = 5;\nconst lineColor = '#282c34'\n\n\nexport default function Hangman({misses}) {\n\n    useEffect(() => {\n        const canvas = document.getElementById(\"hangman_canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        ctx.fillStyle = '#465269'\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n        ctx.strokeStyle = lineColor;\n        ctx.lineWidth = lineWidth;\n        ctx.moveTo(200, 150);\n        ctx.lineTo(200, 80)\n        ctx.lineTo(500, 80)\n        ctx.lineTo(500, 550)\n        ctx.moveTo(560, 550)\n        ctx.lineTo(440, 550)\n        ctx.stroke()\n        ctx.moveTo(200, 200);\n    }, [])\n\n    useEffect(() => {\n        const canvas = document.getElementById(\"hangman_canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        if (misses === 1) {\n            ctx.beginPath()\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = lineWidth;\n            ctx.arc(200, 200, 40, 0, 2 * Math.PI);\n            ctx.stroke();\n        }\n        if (misses === 2) {\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = lineWidth;\n            ctx.moveTo(200, 240);\n            ctx.lineTo(200, 370)\n            ctx.stroke();\n        }\n        if (misses === 3) {\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = lineWidth;\n            ctx.moveTo(200, 370);\n            ctx.lineTo(230, 460)\n            ctx.stroke();\n        }\n        if (misses === 4) {\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = lineWidth;\n            ctx.moveTo(200, 370);\n            ctx.lineTo(170, 460)\n            ctx.stroke();\n        }\n        if (misses === 5) {\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = lineWidth;\n            ctx.moveTo(200, 290);\n            ctx.lineTo(260, 270)\n            ctx.stroke();\n        }\n        if (misses === 6) {\n            ctx.strokeStyle = lineColor;\n            ctx.lineWidth = lineWidth;\n            ctx.moveTo(200, 290);\n            ctx.lineTo(140, 270)\n            ctx.stroke();\n        }\n\n    }, [misses])\n    return (\n        <canvas id=\"hangman_canvas\" width=\"600\" height=\"600\">\n            Your browser does not support the canvas element.\n        </canvas>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport Hangman from \"./Hangman\";\n\nfunction App() {\n    const [guesses, setGuesses] = useState([])\n    const [misses, setMisses] = useState(0)\n    const phrase = \"stackoverflow and stuff\"\n    const guess = letter => {\n        if (phrase.indexOf(letter) == -1) {\n            setMisses(misses + 1)\n        }\n        setGuesses([...guesses, letter])\n    }\n    const gameOver = misses > 6\n\n    const replaceRegex = new RegExp(`[^${guesses.join(\"\")} ]`, 'gi')\n    const hangmanLetters = phrase.replace(replaceRegex, \"_\")\n    return (\n        <div className=\"App\">\n            <Hangman misses={misses}/>\n\n            <div className={\"phrase\"}>\n                {hangmanLetters}\n            </div>\n            <div className={\"alphabet\"}>\n                {\"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => {\n                    return <input className={\"character_buttons\"} type={\"button\"}\n                                  disabled={gameOver || guesses.indexOf(letter) > -1} value={letter}\n                                  onClick={() => guess(letter)}/>\n                })}\n            </div>\n            {gameOver && <div>\n                <div>You Lose</div>\n                <div>Phrase: \"{phrase}\"</div>\n            </div>}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}